//
//  <%=@model_file_name%>.m
//
//  LaneKit is available under the MIT license. See the LICENSE file for more info.
//
//  This model was created on <%=config[:generate_date]%> by LaneKit v<%=config[:lanekit_version]%>.
//
// The following LaneKit command was used to generate this file:
// <%=config[:command]%>
//

#import "<%=@model_file_name%>.h"<% @attributes.each do |attribute| %><% if attribute[:relationship] %>
#import "<%=attribute[:relationship]%>.h"<%end%><%end%>

@implementation <%=@class_name%><% if @using_core_data %>

// All properties in this NSManagedObject need to be defined with @dynamic<% @attributes.each do |attribute| %>
@dynamic <%=attribute[:name]%>;<% end %><% end %>

#pragma mark LKModel overrides

// Dictionary to convert self to JSON/XML. For XML mappings, add .text to the end of the destination attribute name like this: "title.text".
+ (NSDictionary *)dictionaryForRequestMappings
{
    return @{
             // source key path : destination attribute name
<% @attributes.each_with_index do |attribute, index| %><% if !attribute[:relationship] %>             @"<%=attribute[:name]%>": @"<%=attribute[:name]%>"<% if index != @attributes.size-1 %>,<% end %>
<% end %><% end %>    };
}

// Dictionary to convert JSON/XML to self. For XML mappings, add .text to the end of the key path like this: "title.text".
+ (NSDictionary *)dictionaryForResponseMappings
{
  return @{
           // source key path : destination attribute name
<% @attributes.each_with_index do |attribute, index| %><% if !attribute[:relationship] %>             @"<%=attribute[:name]%>": @"<%=attribute[:name]%>"<% if index != @attributes.size-1 %>,<% end %>
<% end %><% end %>    };
}

+ (NSString *)keyPath
{
  return @"<%=@model_name%>";
}<% if @any_relationships %>

+ (RKObjectMapping *)responseMapping
{
    RKObjectMapping *mapping = [RKObjectMapping mappingForClass:[<%=@class_name%> class]];
    [mapping addAttributeMappingsFromDictionary:[self dictionaryForResponseMappings]];
<% @attributes.each_with_index do |attribute, index| %><% if attribute[:relationship] %>
    [mapping addRelationshipMappingWithSourceKeyPath:@"<%=attribute[:name]%>" mapping:[<%=attribute[:relationship]%> responseMapping]];
<% end %><% end %>    return mapping;
}<% end %>

- (NSString *)descriptionForDisplay
{<% if @first_string_attribute %>
  return [NSString stringWithFormat:@"%@", self.<%=@first_string_attribute%>];<% else %>
  return [self description];<% end %>
}

@end
