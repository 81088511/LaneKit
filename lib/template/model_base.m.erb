//
//  <%=@model_base_file_name%>.m
//
//  This base model was created on <%=config[:generate_date]%> by LaneKit v<%=config[:lanekit_version]%>.
//
// The following LaneKit command was used to generate this file:
// <%=config[:command]%>
//

#import "<%=@model_base_file_name%>.h"

@implementation <%=@model_base_class_name%><% if @using_core_data %>

+ (NSString *)entityName
{
    return NSStringFromClass([self class]);
}

+ (<%=@class_name%> *)create:(NSManagedObjectContext *)moc
{
    <%=@class_name%> *entity = nil;
    @try {
        entity = [NSEntityDescription insertNewObjectForEntityForName:self.entityName inManagedObjectContext:moc];
    }
    @catch (NSException *exception) {
        NSLog(@"[%@ %@] %@", [self description], NSStringFromSelector(_cmd), exception);
        @throw exception;
    }
    return entity;
}<% end %>

// Dictionary to convert self to JSON
// Subclasses may need to override this method
+ (NSDictionary *)dictionaryForRequestMappings
{
  return @{
           };
}

// Dictionary to convert JSON to self
// Subclasses may need to override this method
+ (NSDictionary *)dictionaryForResponseMappings
{
  return @{
           };
}

// Subclasses should override this method
+ (NSString *)keyPath
{
  return nil;
}

// Subclasses may need to override this method
+ (NSString *)pathPattern
{
  return nil;
}

// Returns the request RKObjectMapping for this class
+ (RKObjectMapping *)requestMapping
{
  RKObjectMapping *mapping = [RKObjectMapping requestMapping];
  [mapping addAttributeMappingsFromDictionary:[self dictionaryForRequestMappings]];
  return mapping;
}

// Returns the response RKObjectMapping for this class
// Subclasses may need to override this method
+ (RKObjectMapping *)responseMapping
{
  RKObjectMapping *mapping = [RKObjectMapping mappingForClass:self.class];
  [mapping addAttributeMappingsFromDictionary:[self dictionaryForResponseMappings]];
  return mapping;
}

- (NSString *)descriptionForDisplay
{
  return [self description];
}

@end
